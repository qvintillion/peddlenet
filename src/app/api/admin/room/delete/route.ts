// API proxy to WebSocket server room delete endpoint\nimport { NextRequest, NextResponse } from 'next/server';\n\n// Get the WebSocket server URL\nfunction getWebSocketServerUrl() {\n  // In development, use local server\n  if (process.env.NODE_ENV === 'development') {\n    return 'http://localhost:3001';\n  }\n  \n  // In production, use the Cloud Run server\n  return process.env.WEBSOCKET_SERVER_URL || 'https://peddlenet-websocket-server-hfttiarlja-uc.a.run.app';\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    const { roomId, roomCode } = body;\n    \n    if (!roomId && !roomCode) {\n      return NextResponse.json({ error: 'roomId or roomCode is required' }, { status: 400 });\n    }\n    \n    const serverUrl = getWebSocketServerUrl();\n    console.log('\ud83c\udf0c Proxying room delete request to:', `${serverUrl}/admin/room/delete`);\n    \n    const response = await fetch(`${serverUrl}/admin/room/delete`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ roomId, roomCode }),\n    });\n\n    if (!response.ok) {\n      console.error('\u274c WebSocket server room delete failed:', response.status, response.statusText);\n      return NextResponse.json({ error: 'Failed to delete room' }, { status: response.status });\n    }\n\n    const data = await response.json();\n    console.log('\u2705 Room deleted successfully');\n    return NextResponse.json(data);\n  } catch (error) {\n    console.error('\u274c Room delete API error:', error);\n    return NextResponse.json({ error: 'Internal server error' }, { status: 500 });\n  }\n}\n